/*
    STACK360 - Web-based Business Management System
    Copyright (C) 2024 Arahant LLC

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/

/*
*/

package com.intuit.developer;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import jakarta.xml.ws.*;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.4-b01-
 * Generated source version: 2.1
 *
 */
@WebService(name = "QBWebConnectorSvcSoap", targetNamespace = "http://developer.intuit.com/")
//@XmlSeeAlso({
//    ObjectFactory.class
//})
public interface QBWebConnectorSvcSoap {


    /**
     *
     * @param strPassword
     * @param strUserName
     * @return
     *     returns com.intuit.developer.ArrayOfString
     */
    @WebMethod(action = "http://developer.intuit.com/authenticate")
    @WebResult(name = "authenticateResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "authenticate", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.Authenticate")
    @ResponseWrapper(localName = "authenticateResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.AuthenticateResponse")
    public ArrayOfString authenticate(
        @WebParam(name = "strUserName", targetNamespace = "http://developer.intuit.com/")
        String strUserName,
        @WebParam(name = "strPassword", targetNamespace = "http://developer.intuit.com/")
        String strPassword)
 ;
        //   {
  //      return null;
  //  }

    /**
     *
     * @param ticket
     * @param qbXMLMajorVers
     * @param qbXMLCountry
     * @param strCompanyFileName
     * @param qbXMLMinorVers
     * @param strHCPResponse
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://developer.intuit.com/sendRequestXML")
    @WebResult(name = "sendRequestXMLResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "sendRequestXML", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.SendRequestXML")
    @ResponseWrapper(localName = "sendRequestXMLResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.SendRequestXMLResponse")
    public String sendRequestXML(
        @WebParam(name = "ticket", targetNamespace = "http://developer.intuit.com/")
        String ticket,
        @WebParam(name = "strHCPResponse", targetNamespace = "http://developer.intuit.com/")
        String strHCPResponse,
        @WebParam(name = "strCompanyFileName", targetNamespace = "http://developer.intuit.com/")
        String strCompanyFileName,
        @WebParam(name = "qbXMLCountry", targetNamespace = "http://developer.intuit.com/")
        String qbXMLCountry,
        @WebParam(name = "qbXMLMajorVers", targetNamespace = "http://developer.intuit.com/")
        int qbXMLMajorVers,
        @WebParam(name = "qbXMLMinorVers", targetNamespace = "http://developer.intuit.com/")
        int qbXMLMinorVers)
;
        //    {
//        return "";
//    }

    /**
     *
     * @param ticket
     * @param hresult
     * @param message
     * @param response
     * @return
     *     returns int
     */
    @WebMethod(action = "http://developer.intuit.com/receiveResponseXML")
    @WebResult(name = "receiveResponseXMLResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "receiveResponseXML", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.ReceiveResponseXML")
    @ResponseWrapper(localName = "receiveResponseXMLResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.ReceiveResponseXMLResponse")
    public int receiveResponseXML(
        @WebParam(name = "ticket", targetNamespace = "http://developer.intuit.com/")
        String ticket,
        @WebParam(name = "response", targetNamespace = "http://developer.intuit.com/")
        String response,
        @WebParam(name = "hresult", targetNamespace = "http://developer.intuit.com/")
        String hresult,
        @WebParam(name = "message", targetNamespace = "http://developer.intuit.com/")
        String message)
;//    {
//        return 100;
//    }

    /**
     *
     * @param ticket
     * @param hresult
     * @param message
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://developer.intuit.com/connectionError")
    @WebResult(name = "connectionErrorResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "connectionError", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.ConnectionError")
    @ResponseWrapper(localName = "connectionErrorResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.ConnectionErrorResponse")
    public String connectionError(
        @WebParam(name = "ticket", targetNamespace = "http://developer.intuit.com/")
        String ticket,
        @WebParam(name = "hresult", targetNamespace = "http://developer.intuit.com/")
        String hresult,
        @WebParam(name = "message", targetNamespace = "http://developer.intuit.com/")
        String message)
;//    {
//        return "";
//    }

    /**
     *
     * @param ticket
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://developer.intuit.com/getLastError")
    @WebResult(name = "getLastErrorResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "getLastError", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.GetLastError")
    @ResponseWrapper(localName = "getLastErrorResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.GetLastErrorResponse")
    public String getLastError(
        @WebParam(name = "ticket", targetNamespace = "http://developer.intuit.com/")
        String ticket)
; //   {
 //       return "";
//    }
/*
    @WebMethod(action = "http://developer.intuit.com/getInteractiveURL")
    @WebResult(name = "getInteractiveURLResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "getInteractiveURL", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.GetInteractiveURL")
    @ResponseWrapper(localName = "getInteractiveURLResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.GetInteractiveURLResponse")
    public String getInteractiveURL(
            @WebParam(name = "wcTicket", targetNamespace = "http://developer.intuit.com/")
            String wcTicket,
            @WebParam(name = "sessionID", targetNamespace = "http://developer.intuit.com/")
            String sessionID);



    @WebMethod(action = "http://developer.intuit.com/interactiveRejected")
    @WebResult(name = "interactiveRejectedResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "interactiveRejected", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.interactiveRejected")
    @ResponseWrapper(localName = "interactiveRejectedResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.InteractiveRejectedResponse")
    public String interactiveRejected(
            @WebParam(name = "wcTicket", targetNamespace = "http://developer.intuit.com/")
            String wcTicket);

    @WebMethod(action = "http://developer.intuit.com/interactiveDone")
    @WebResult(name = "interactiveDoneResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "interactiveDone", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.interactiveDone")
    @ResponseWrapper(localName = "interactiveDoneResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.InteractiveDoneResponse")
    public String interactiveDone(
            @WebParam(name = "wcTicket", targetNamespace = "http://developer.intuit.com/")
            String wcTicket);
 *
 */
    /**
     *
     * @param ticket
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "http://developer.intuit.com/closeConnection")
    @WebResult(name = "closeConnectionResult", targetNamespace = "http://developer.intuit.com/")
    @RequestWrapper(localName = "closeConnection", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.CloseConnection")
    @ResponseWrapper(localName = "closeConnectionResponse", targetNamespace = "http://developer.intuit.com/", className = "com.intuit.developer.CloseConnectionResponse")
    public String closeConnection(
        @WebParam(name = "ticket", targetNamespace = "http://developer.intuit.com/")
        String ticket)
;//    {
 //       return "";
 //   }

}
