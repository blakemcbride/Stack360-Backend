/*
    STACK360 - Web-based Business Management System
    Copyright (C) 2024 Arahant LLC

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/

/*
*/


package com.arahant.beans;

import javax.persistence.*;



import java.util.HashSet;
import java.util.Set;

import com.arahant.exceptions.ArahantException;
import com.arahant.utils.IDGenerator;

/**
 * HrEeoCategory generated by hbm2java
 */
@Entity
@Table(name = "hr_eeo_category")
public class HrEeoCategory extends ArahantBean implements java.io.Serializable {

    private static final long serialVersionUID = 1L;
    public static final String TABLE_NAME = "hr_eeo_category";
    // Fields
    private String eeoCategoryId;
    public static final String EEOCATEGORYID = "eeoCategoryId";
    private String name;
    public static final String NAME = "name";
    private Set<Employee> employees = new HashSet<Employee>(0);
    public static final String EMPLOYEES = "employees";

    // Constructors
    /** default constructor */
    public HrEeoCategory() {
    }

    // Property accessors
    @Id
    @Column(name = "eeo_category_id")
    public String getEeoCategoryId() {
        return this.eeoCategoryId;
    }

    public void setEeoCategoryId(final String eeoCategoryId) {
        this.eeoCategoryId = eeoCategoryId;
    }

    @Column(name = "name")
    public String getName() {
        return this.name;
    }

    public void setName(final String name) {
        this.name = name;
    }

    @OneToMany(mappedBy = Employee.HREEOCATEGORY, fetch = FetchType.LAZY)
    @org.hibernate.annotations.Fetch(value = org.hibernate.annotations.FetchMode.SUBSELECT)
    public Set<Employee> getEmployees() {
        return this.employees;
    }

    public void setEmployees(final Set<Employee> employees) {
        this.employees = employees;
    }
    /* (non-Javadoc)
     * @see com.arahant.beans.ArahantBean#keyColumn()
     */

    @Override
    public String keyColumn() {

        return "eeo_category_id";
    }

    /* (non-Javadoc)
     * @see com.arahant.beans.ArahantBean#tableName()
     */
    @Override
    public String tableName() {

        return TABLE_NAME;
    }
    /* (non-Javadoc)
     * @see com.arahant.beans.ArahantBean#generateId()
     */

    @Override
    public String generateId() throws ArahantException {
        setEeoCategoryId(IDGenerator.generate(this));
        return eeoCategoryId;
    }

    @Override
    public boolean equals(Object o) {
        if (eeoCategoryId == null && o == null) {
            return true;
        }
        if (eeoCategoryId != null && o instanceof HrEeoCategory) {
            return eeoCategoryId.equals(((HrEeoCategory) o).getEeoCategoryId());
        }

        return false;
    }

    @Override
    public int hashCode() {
        if (eeoCategoryId == null) {
            return 0;
        }
        return eeoCategoryId.hashCode();
    }
}
