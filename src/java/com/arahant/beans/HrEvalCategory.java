/*
    STACK360 - Web-based Business Management System
    Copyright (C) 2024 Arahant LLC

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/

/*
*/


package com.arahant.beans;

import javax.persistence.*;



import java.util.HashSet;
import java.util.Set;

import com.arahant.exceptions.ArahantException;
import com.arahant.utils.IDGenerator;

/**
 * HrEvalCategory generated by hbm2java
 */
@Entity
@Table(name = "hr_eval_category")
public class HrEvalCategory extends Setup implements java.io.Serializable {

    private static final long serialVersionUID = 1L;
    public static final String TABLE_NAME = "hr_eval_category";
    public static final String FIRST_ACTIVE_DATE = "firstActiveDate";
    public static final String LAST_ACTIVE_DATE = "lastActiveDate";
    // Fields
    private String evalCatId;
    public static final String EVALCATID = "evalCatId";
    private String name;
    public static final String NAME = "name";
    private String description;
    public static final String DESCRIPTION = "description";
    private short weight;
    public static final String WEIGHT = "weight";
    private Set<HrEmplEvalDetail> hrEmplEvalDetails = new HashSet<HrEmplEvalDetail>(0);
    public static final String HREMPLEVALDETAILS = "hrEmplEvalDetails";

    // Constructors
    /** default constructor */
    public HrEvalCategory() {
    }

    // Property accessors
    @Id
    @Column(name = "eval_cat_id")
    public String getEvalCatId() {
        return this.evalCatId;
    }

    public void setEvalCatId(final String evalCatId) {
        this.evalCatId = evalCatId;
    }

    @Column(name = "name")
    public String getName() {
        return this.name;
    }

    public void setName(final String name) {
        this.name = name;
    }

    @Column(name = "description")
    public String getDescription() {
        return this.description;
    }

    public void setDescription(final String description) {
        this.description = description;
    }

    @Column(name = "weight")
    public short getWeight() {
        return this.weight;
    }

    public void setWeight(final short weight) {
        this.weight = weight;
    }

    @OneToMany(mappedBy = HrEmplEvalDetail.HREVALCATEGORY, fetch = FetchType.LAZY)
    @org.hibernate.annotations.Fetch(value = org.hibernate.annotations.FetchMode.SUBSELECT)
    public Set<HrEmplEvalDetail> getHrEmplEvalDetails() {
        return this.hrEmplEvalDetails;
    }

    public void setHrEmplEvalDetails(final Set<HrEmplEvalDetail> hrEmplEvalDetails) {
        this.hrEmplEvalDetails = hrEmplEvalDetails;
    }
    /* (non-Javadoc)
     * @see com.arahant.beans.ArahantBean#keyColumn()
     */

    @Override
    public String keyColumn() {

        return "eval_cat_id";
    }

    /* (non-Javadoc)
     * @see com.arahant.beans.ArahantBean#tableName()
     */
    @Override
    public String tableName() {

        return TABLE_NAME;
    }
    /* (non-Javadoc)
     * @see com.arahant.beans.ArahantBean#generateId()
     */

    @Override
    public String generateId() throws ArahantException {
        setEvalCatId(IDGenerator.generate(this));
        return evalCatId;
    }

    @Column(name = "last_active_date")
    @Override
    public int getLastActiveDate() {
        return lastActiveDate;
    }

    @Column(name = "first_active_date")
    @Override
    public int getFirstActiveDate() {
        return firstActiveDate;
    }

    @ManyToOne
    @JoinColumn(name = "org_group_id")
    @Override
    public OrgGroup getOrgGroup() {
        return orgGroup;
    }

    @Override
    public boolean equals(Object o) {
        if (evalCatId == null && o == null) {
            return true;
        }
        if (evalCatId != null && o instanceof HrEvalCategory) {
            return evalCatId.equals(((HrEvalCategory) o).getEvalCatId());
        }

        return false;
    }

    @Override
    public int hashCode() {
        if (evalCatId == null) {
            return 0;
        }
        return evalCatId.hashCode();
    }
}
