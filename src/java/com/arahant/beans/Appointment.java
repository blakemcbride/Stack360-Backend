/*
    STACK360 - Web-based Business Management System
    Copyright (C) 2024 Arahant LLC

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/

/*
*/


package com.arahant.beans;

import com.arahant.exceptions.ArahantException;
import com.arahant.utils.IDGenerator;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * ProjectStatus generated by hbm2java
 */
@Entity
@Table(name = Appointment.TABLE_NAME)
public class Appointment extends ArahantBean implements java.io.Serializable, Comparable<Appointment> {

	private static final long serialVersionUID = 1L;
	public static final String TABLE_NAME = "appointment";
	public static final String COMPANY = "company";
	public static final String DATE = "meetingDate";
	public static final String TIME = "meetingTime";
	public static final String PERSON_JOINS = "employees";
	public static final String TYPE = "meetingTimeType";
	public static final String STATUS = "status";
	public static final String APPOINTMENT_ID = "appointmentId";
	public static final String LOCATION = "location";
	// Fields
	private String appointmentId;
	private CompanyBase company;
	private int meetingDate;
	private int meetingTime = -1;
	private String prospectAttendees = "";
	private String meetingLocation = "";
	private char status = 'A';
	private String purpose;
	private char meetingTimeType;
	private short meetingLength;
	private Set<AppointmentPersonJoin> employees = new HashSet<AppointmentPersonJoin>(0);
	private AppointmentLocation location;

	@Override
	public boolean equals(Object o) {
		if (appointmentId == null && o == null)
			return true;
		if (appointmentId != null && o instanceof Appointment)
			return appointmentId.equals(((Appointment) o).getAppointmentId());

		return false;
	}

	@Override
	public int hashCode() {
		if (appointmentId == null)
			return 0;
		return appointmentId.hashCode();
	}

	@Override
	public int compareTo(Appointment o) {
		if (meetingDate != o.meetingDate)
			return meetingDate - o.meetingDate;
		return meetingTime - o.meetingTime;
	}

	@Override
	public String tableName() {
		return TABLE_NAME;
	}

	@Override
	public String keyColumn() {
		return "appointment_id";
	}

	@Override
	public String generateId() throws ArahantException {
		return appointmentId = IDGenerator.generate(this);
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "org_group_id")
	public CompanyBase getCompany() {
		return company;
	}

	public void setCompany(CompanyBase company) {
		this.company = company;
	}

	@Column(name = "meeting_date")
	public int getMeetingDate() {
		return meetingDate;
	}

	public void setMeetingDate(int meetingDate) {
		this.meetingDate = meetingDate;
	}

	@Column(name = "meeting_location")
	public String getMeetingLocation() {
		return meetingLocation;
	}

	public void setMeetingLocation(String meetingLocation) {
		this.meetingLocation = meetingLocation;
	}

	@Column(name = "meeting_time")
	public int getMeetingTime() {
		return meetingTime;
	}

	public void setMeetingTime(int meetingTime) {
		this.meetingTime = meetingTime;
	}

	@Id
	@Column(name = "appointment_id")
	public String getAppointmentId() {
		return appointmentId;
	}

	public void setAppointmentId(String appointmentId) {
		this.appointmentId = appointmentId;
	}

	@Column(name = "attendees")
	public String getProspectAttendees() {
		return prospectAttendees;
	}

	public void setProspectAttendees(String prospectAttendees) {
		this.prospectAttendees = prospectAttendees;
	}

	@Column(name = "purpose")
	public String getPurpose() {
		return purpose;
	}

	public void setPurpose(String purpose) {
		this.purpose = purpose;
	}

	@Column(name = "status")
	public char getStatus() {
		return status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@OneToMany(mappedBy = AppointmentPersonJoin.APPOINTMENT, fetch = FetchType.LAZY)
	@org.hibernate.annotations.Fetch(value = org.hibernate.annotations.FetchMode.SUBSELECT)
	public Set<AppointmentPersonJoin> getEmployees() {
		return employees;
	}

	public void setEmployees(Set<AppointmentPersonJoin> employees) {
		this.employees = employees;
	}

	@Column(name = "meeting_time_type")
	public char getMeetingTimeType() {
		return meetingTimeType;
	}

	public void setMeetingTimeType(char meetingTimeType) {
		this.meetingTimeType = meetingTimeType;
	}

	@Column(name = "meeting_length")
	public short getMeetingLength() {
		return meetingLength;
	}

	public void setMeetingLength(short meetingLength) {
		this.meetingLength = meetingLength;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id")
	public AppointmentLocation getLocation() {
		return location;
	}

	public void setLocation(AppointmentLocation location) {
		this.location = location;
	}
}
